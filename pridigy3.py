# -*- coding: utf-8 -*-
"""pridigy3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ew7URIut3Jcr9Al8evNIcmqscQjaUMfw
"""

import pandas as pd



from sklearn.model_selection import train_test_split

from sklearn.tree import DecisionTreeClassifier

from sklearn.metrics import accuracy_score, classification_report

url = "/content/bank.csv"
bank_df = pd.read_csv(url, sep=';')

print(bank_df.head())

#to select relevant features and split the data into training and testing sets:

# Selecting relevant features

features = ['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'campaign', 'pdays', 'previous', 'poutcome']
X = bank_df[features]
y = bank_df['y']  # Target variable (whether customer subscribed)

# Convert categorical variables into dummy/indicator variables
X = pd.get_dummies(X, drop_first=True)

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#build and train the decision tree classifier:

# Initialize the decision tree classifier
clf = DecisionTreeClassifier(random_state=42)

# Train the classifier
clf.fit(X_train, y_train)

# Predictions on the test set
y_pred = clf.predict(X_test)

#to evaluate the model's performance:

# Model evaluation
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Classification report
print("Classification Report:")
print(classification_report(y_test, y_pred))

